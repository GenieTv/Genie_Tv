<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="View_53_ShowCase">
		<control type="group">
			<visible>Control.IsVisible(53)</visible>
			<top>-22</top>
			<left>0</left>
			<include>ViewAnimation</include>
			<control type="group">
				<camera x="960" y="810" />
				<control type="group" id="6001">
					<left>55</left>
					<top>570</top>
					<visible>Container.OnNext + !Skin.HasSetting(noshowcaseflow)</visible>
					<animation effect="slide" end="-135,0" time="200" reversible="false">Hidden</animation>
					<control type="group">
						<left>15</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(-7).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<visible>Container.OnNext</visible>
						<animation effect="fade" start="100" end="0" time="200" reversible="false">Hidden</animation>
						<animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-7</include>
					</control>
					<control type="group">
						<left>150</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(-6).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-6</include>
					</control>
					<control type="group">
						<left>285</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(-5).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-5</include>
					</control>
					<control type="group">
						<left>420</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(-4).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-4</include>
					</control>
					<control type="group">
						<left>555</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(-3).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-3</include>
					</control>
					<control type="group">
						<left>690</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(-2).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-2</include>
					</control>
					<control type="group">
						<left>1635</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(6).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<visible>!Container.OnNext</visible>
						<animation effect="fade" end="100" time="200" reversible="false">Visible</animation>
						<animation effect="rotatey" center="2100" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem6</include>
					</control>
					<control type="group">
						<left>1500</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(5).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1965" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem5</include>
					</control>
					<control type="group">
						<left>1365</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(4).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1830" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem4</include>
					</control>
					<control type="group">
						<left>1230</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(3).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1695" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem3</include>
					</control>
					<control type="group">
						<left>1095</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(2).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1560" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem2</include>
					</control>
					<control type="group">
						<left>960</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(1).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1425" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem1</include>
					</control>
					<control type="group">
						<visible>Container.OnNext</visible>
						<animation effect="slide" end="75,0" time="200" reversible="false">Hidden</animation>
						<control type="group">
							<left>825</left>
							<visible>Container.OnNext</visible>
							<visible>!IsEmpty(Container(53).ListItemNoWrap(0).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
							<animation effect="rotatey" center="1290" end="-55" time="200" reversible="false" tween="quadratic" easing="in">Hidden</animation>
							<animation effect="rotatey" center="1290" start="55" end="55" time="0" condition="true">Conditional</animation>
							<include>MovieShowCaseItem0</include>
						</control>
						<control type="group">
							<left>758</left>
							<visible>!IsEmpty(Container(53).ListItemNoWrap(-1).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
							<visible>Container.OnNext</visible>
							<animation effect="rotatey" center="608" end="-55" time="200" reversible="false" tween="quadratic">Hidden</animation>
							<control type="image">
								<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-1Var]</texture>
								<include>MovieShowcaseThumb</include>
							</control>
							<control type="image">
								<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes-1Var]p.png</texture>
								<include>MovieShowcaseCase</include>
							</control>
							<control type="image">
								<texture background="true" fallback="thumbs/boxes/clearcases/p.png">thumbs/boxes/clearcases/$VAR[ShowcaseRes-1Var]p.png</texture>
								<include>MovieShowcaseClearCase</include>
							</control>
							<control type="image">
								<include>WatchedOverlayShowCase</include>
								<texture>$VAR[IconOverlay-1Var]</texture>
							</control>
							<control type="image">
								<include>WatchedOverlayShowCase2</include>
								<texture>$VAR[IconOverlay-1Var]</texture>
							</control>
							<control type="image">
								<include>WatchedOverlayShowCase3</include>
								<texture>$VAR[IconOverlay-1Var]</texture>
							</control>
							<control type="group">
								<left>28</left>
								<top>22</top>
								<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-1</include>
							</control>
							<control type="image">
								<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-1Var]</texture>
								<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
								<include>MovieShowcaseThumbReflection</include>
							</control>
							<control type="image">
								<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes-1Var]p.png</texture>
								<include>MovieShowcaseCaseReflection</include>
							</control>
						</control>
					</control>
				</control>
				<control type="group" id="6002">
					<left>55</left>
					<top>570</top>
					<visible>Container.OnPrevious + !Skin.HasSetting(noshowcaseflow)</visible>
					<animation effect="slide" end="135,0" time="200" reversible="false">Hidden</animation>
					<control type="group">
						<left>1500</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(7).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<visible>Container.OnPrevious</visible>
						<animation effect="fade" start="100" end="0" time="200" reversible="false">Hidden</animation>
						<animation effect="rotatey" center="1965" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem7</include>
					</control>
					<control type="group">
						<left>1365</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(6).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1830" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem6</include>
					</control>
					<control type="group">
						<left>1230</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(5).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1695" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem5</include>
					</control>
					<control type="group">
						<left>1095</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(4).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1560" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem4</include>
					</control>
					<control type="group">
						<left>960</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(3).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1425" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem3</include>
					</control>
					<control type="group">
						<left>825</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(2).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1290" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem2</include>
					</control>
					<control type="group">
						<left>-120</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(-6).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<visible>!Container.OnPrevious</visible>
						<animation effect="fade" end="100" time="200" reversible="false">Visible</animation>
						<animation effect="rotatey" center="-270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-6</include>
					</control>
					<control type="group">
						<left>15</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(-5).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-5</include>
					</control>
					<control type="group">
						<left>150</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(-4).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-4</include>
					</control>
					<control type="group">
						<left>285</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(-3).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-3</include>
					</control>
					<control type="group">
						<left>420</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(-2).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-2</include>
					</control>
					<control type="group">
						<left>555</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(-1).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-1</include>
					</control>
					<control type="group">
						<visible>Container.OnPrevious</visible>
						<animation effect="slide" end="-75,0" time="200" reversible="false">Hidden</animation>
						<control type="group">
							<left>690</left>
							<visible>Container.OnPrevious</visible>
							<visible>!IsEmpty(Container(53).ListItemNoWrap(0).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
							<animation effect="rotatey" center="540" end="55" time="200" reversible="false" tween="quadratic" easing="in">Hidden</animation>
							<animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
							<include>MovieShowCaseItem0</include>
						</control>
						<control type="group">
							<left>758</left>
							<visible>!IsEmpty(Container(53).ListItemNoWrap(1).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
							<visible>Container.OnPrevious</visible>
							<animation effect="rotatey" center="1223" end="55" time="200" reversible="false" tween="quadratic">Hidden</animation>
							<control type="image">
								<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem1Var]</texture>
								<include>MovieShowcaseThumb</include>
							</control>
							<control type="image">
								<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes1Var]p.png</texture>
								<include>MovieShowcaseCase</include>
							</control>
							<control type="image">
								<texture background="true" fallback="thumbs/boxes/clearcases/p.png">thumbs/boxes/clearcases/$VAR[ShowcaseRes1Var]p.png</texture>
								<include>MovieShowcaseClearCase</include>
							</control>
							<control type="image">
								<include>WatchedOverlayShowCase</include>
								<texture>$VAR[IconOverlay1Var]</texture>
							</control>
							<control type="image">
								<include>WatchedOverlayShowCase2</include>
								<texture>$VAR[IconOverlay1Var]</texture>
							</control>
							<control type="image">
								<include>WatchedOverlayShowCase3</include>
								<texture>$VAR[IconOverlay1Var]</texture>
							</control>
							<control type="group">
								<left>28</left>
								<top>22</top>
								<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon1</include>
							</control>
							<control type="image">
								<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem1Var]</texture>
								<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
								<include>MovieShowcaseThumbReflection</include>
							</control>
							<control type="image">
								<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem1Var]</texture>
								<include>MovieShowcaseCaseReflection</include>
							</control>
							<control type="image">
								<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes1Var]p.png</texture>
								<include>MovieShowcaseCaseReflection</include>
							</control>
						</control>
					</control>
				</control>
				<control type="group" id="6000">
					<left>55</left>
					<top>570</top>
					<visible>!Control.IsVisible(6001) + !Control.IsVisible(6002) + !Skin.HasSetting(noshowcaseflow)</visible>
					<control type="group">
						<left>15</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(-6).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="-135" end="55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="-1028" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem-6</include>
					</control>
					<control type="group">
						<left>150</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(-5).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="0" end="55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="-866" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem-5</include>
					</control>
					<control type="group">
						<left>285</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(-4).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="135" end="55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="-704" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem-4</include>
					</control>
					<control type="group">
						<left>420</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(-3).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="270" end="55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="-543" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem-3</include>
					</control>
					<control type="group">
						<left>555</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(-2).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="405" end="55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="-384" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem-2</include>
					</control>
					<control type="group">
						<left>690</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(-1).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="540" end="55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="-226" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem-1</include>
					</control>
					<control type="group">
						<left>1500</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(6).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1965" start="55" end="55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="1965" end="-55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="1028" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem6</include>
					</control>
					<control type="group">
						<left>1365</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(5).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1830" start="55" end="55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="1830" end="-55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="866" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem5</include>
					</control>
					<control type="group">
						<left>1230</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(4).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1695" start="55" end="55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="1695" end="-55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="704" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem4</include>
					</control>
					<control type="group">
						<left>1095</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(3).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1560" start="55" end="55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="1560" end="-55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="543" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem3</include>
					</control>
					<control type="group">
						<left>960</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(2).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1425" start="55" end="55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="1425" end="-55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="384" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem2</include>
					</control>
					<control type="group">
						<left>825</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(1).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1290" start="55" end="55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="1290" end="-55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="226" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem1</include>
					</control>
					<control type="group">
						<left>758</left>
						<control type="group">
							<visible>!IsEmpty(Container(53).ListItemNoWrap(0).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
							<include>MovieShowCaseItem0</include>
						</control>
					</control>
				</control>
			</control>
			<include condition="Skin.HasSetting(HorizontalListNav)">scmfixed</include>
			<include condition="!Skin.HasSetting(HorizontalListNav)">scmwrap</include>
			<control type="scrollbar" id="72">
				<left>110</left>
				<top>983</top>
				<width>1680</width>
				<height>12</height>
				<onup>53</onup>
				<ondown>9010</ondown>
				<texturesliderbackground border="1">-</texturesliderbackground>
				<texturesliderbar border="6,0,6,0">scrollbar/texturesliderbar_hor.png</texturesliderbar>
				<texturesliderbarfocus border="6,0,6,0">scrollbar/texturesliderbarfocus_hor.png</texturesliderbarfocus>
				<textureslidernib>-</textureslidernib>
				<textureslidernibfocus>-</textureslidernibfocus>
				<showonepage>false</showonepage>
				<orientation>horizontal</orientation>
				<animation effect="fade" start="100" end="0" time="500" delay="500" condition="!Control.HasFocus(72) + !Container.Scrolling">Conditional</animation>
			</control>
		</control>
	</include>
	<include name="ShowCaseInfoPanel">
		<control type="group" id="12000">
			<visible>!IsEmpty(Control.GetLabel(4420)) + Control.IsVisible(4420)</visible>
			<animation effect="slide" start="0,-1200" end="0,0" time="720" tween="cubic">VisibleChange</animation>
			<animation effect="slide" start="0,-1200" end="0,0" time="720" tween="cubic">WindowOpen</animation>
			<animation effect="slide" end="0,-1200" start="0,0" time="720" tween="cubic">WindowClose</animation>
			<animation effect="slide" start="0,0" end="0,20" time="720" tween="cubic" condition="Control.IsVisible(52)">Conditional</animation>
			<top>40</top>
			<control type="image">
				<description>background image</description>
				<left>106</left>
				<top>834</top>
				<width>1706</width>
				<height>734</height>
				<texture border="40">panel_reflect.png</texture>
			</control>
			<control type="image">
				<description>background image</description>
				<left>106</left>
				<top>130</top>
				<width>1706</width>
				<height>734</height>
				<texture border="40">listpanel_back.png</texture>
			</control>
			<control type="group">
				<visible>StringCompare(Control.GetLabel(4420),1)</visible>
				<include>SettingsFadeEffect</include>
				<control type="grouplist">
					<left>137</left>
					<top>162</top>

					<control type="button">
						<label>$VAR[InfoPanelLabel1Var]</label>
						<include>ShowCaseInfoPanelButtonsValues</include>
					</control>
					<control type="button">
						<label>$VAR[InfoPanelLabel2Var]</label>
						<include>ShowCaseInfoPanelButtonsValues</include>
					</control>
				</control>
				<control type="image">
					<left>638</left>
					<top>162</top>
					<width>2</width>
					<height>179</height>
					<texture border="1">separator3.png</texture>
				</control>
				<control type="grouplist">
					<left>640</left>
					<top>162</top>
					<control type="button">
						<label>$VAR[InfoPanelLabel3Var]</label>
						<include>ShowCaseInfoPanelButtonsValues</include>
					</control>
					<control type="group">
						<control type="button">
							<label>$VAR[InfoPanelLabel4Var]</label>
							<width>251</width>
							<include>ShowCaseInfoPanelButtonsValues</include>
						</control>
						<control type="image">
							<left>251</left>
							<width>2</width>
							<texture border="1">separator3.png</texture>
						</control>
						<control type="button">
							<label>$VAR[InfoPanelLabel5Var]</label>
							<left>251</left>
							<width>250</width>
							<include>ShowCaseInfoPanelButtonsValues</include>
						</control>
					</control>
				</control>
				<control type="textbox">
					<label>$VAR[VideoPlotVar]</label>
					<top>342</top>
					<left>152</left>
					<width>970</width>
					<height>180</height>
					<font>font14_textbox2</font>
					<pagecontrol>62</pagecontrol>
					<autoscroll time="3000" delay="4000" repeat="5000">Skin.HasSetting(Enable.AutoScroll) + !Control.HasFocus(62)</autoscroll>
					<include>ShowCaseInfoPanelButtonsValues</include>
				</control>
				<control type="scrollbar" id="62">
					<top>342</top>
					<left>1128</left>
					<width>14</width>
					<height>180</height>
					<onup>SetProperty(MediaMenu,True,home)</onup>
					<onup>SetFocus(9050)</onup>
					<onleft>50</onleft>
					<onright>50</onright>
					<ondown>50</ondown>
					<texturesliderbackground>scrollbar/texturesliderbackground3.png</texturesliderbackground>
					<texturesliderbar colordiffuse="55ffffff" border="1">scrollbar/texturesliderbar3.png</texturesliderbar>
					<texturesliderbarfocus border="1">scrollbar/texturesliderbar3.png</texturesliderbarfocus>
					<showonepage>false</showonepage>
					<orientation>vertical</orientation>
				</control>
				<control type="image">
					<left>137</left>
					<top>464</top>
					<width>1643</width>
					<height>60</height>
					<texture border="1">separator2.png</texture>
				</control>
				<control type="image">
					<left>1142</left>
					<top>162</top>
					<width>640</width>
					<height>360</height>
					<fadetime>200</fadetime>
					<texture background="true">$INFO[ListItem.Art(fanart)]</texture>
					<bordertexture border="1,1,2,1">thumbs/panel_border.png</bordertexture>
					<bordersize>1,1,2,1</bordersize>
				</control>
			</control>
			<control type="group">
				<visible>StringCompare(Control.GetLabel(4420),2)</visible>
				<include>SettingsFadeEffect</include>
				<control type="grouplist">
					<left>137</left>
					<top>162</top>
					<control type="button">
						<label>$VAR[InfoPanelLabel1Var]</label>
						<include>ShowCaseInfoPanelButtonsValues</include>
					</control>
					<control type="button">
						<label>$VAR[InfoPanelLabel2Var]</label>
						<include>ShowCaseInfoPanelButtonsValues</include>
					</control>
					<control type="button">
						<label>$VAR[InfoPanelLabel3Var]</label>
						<include>ShowCaseInfoPanelButtonsValues</include>
					</control>
					<control type="group">
						<control type="button">
							<label>$VAR[InfoPanelLabel4Var]</label>
							<width>251</width>
							<height>92</height>
							<include>ShowCaseInfoPanelButtonsValues</include>
						</control>
						<control type="image">
							<left>251</left>
							<width>2</width>
							<height>90</height>
							<texture border="1">separator3.png</texture>
						</control>
						<control type="button">
							<label>$VAR[InfoPanelLabel5Var]</label>
							<left>251</left>
							<width>250</width>
							<height>92</height>
							<include>ShowCaseInfoPanelButtonsValues</include>
						</control>
					</control>
				</control>
				<control type="image">
					<left>638</left>
					<top>162</top>
					<width>2</width>
					<height>359</height>
					<texture border="1">separator3.png</texture>
				</control>
				<control type="textbox">
					<left>655</left>
					<label>$VAR[VideoPlotVar]</label>
					<top>162</top>
					<width>800</width>
					<height>354</height>
					<font>font14_textbox</font>
					<pagecontrol>62</pagecontrol>
					<autoscroll time="3000" delay="4000" repeat="5000">Skin.HasSetting(Enable.AutoScroll) + !Control.HasFocus(62)</autoscroll>
					<include>ShowCaseInfoPanelButtonsValues</include>
				</control>
				<control type="scrollbar" id="62">
					<top>162</top>
					<left>1458</left>
					<width>14</width>
					<height>360</height>
					<onup>SetProperty(MediaMenu,True,home)</onup>
					<onup>SetFocus(9050)</onup>
					<onleft>50</onleft>
					<onright>50</onright>
					<ondown>50</ondown>
					<texturesliderbackground>scrollbar/texturesliderbackground3.png</texturesliderbackground>
					<texturesliderbar colordiffuse="55ffffff" border="1">scrollbar/texturesliderbar3.png</texturesliderbar>
					<texturesliderbarfocus border="1">scrollbar/texturesliderbar3.png</texturesliderbarfocus>
					<showonepage>false</showonepage>
					<orientation>vertical</orientation>
				</control>
				<control type="image">
					<left>637</left>
					<top>464</top>
					<width>1141</width>
					<height>60</height>
					<texture border="1">separator2.png</texture>
				</control>
				<control type="image">
					<left>1142</left>
					<top>162</top>
					<width>640</width>
					<height>360</height>
					<fadetime>200</fadetime>
					<aspectratio align="right">keep</aspectratio>
					<texture background="true">$VAR[PosterThumbVar]</texture>
					<bordertexture border="1,1,2,1">thumbs/panel_border.png</bordertexture>
					<bordersize>1,1,2,1</bordersize>
				</control>
			</control>
		</control>
	</include>

	<include name="scmfixed">
		<control type="fixedlist" id="53">
			<include>contents53list</include>
		</control>
	</include>
	<include name="scmwrap">
		<control type="wraplist" id="53">
			<include>contents53list</include>
		</control>
	</include>

	<include name="contents53list">
		<left>-69</left>
		<top>540</top>
		<width>2058</width>
		<height>525</height>
		<onleft>53</onleft>
		<onright>53</onright>
		<onup>62</onup>
		<ondown>72</ondown>
		<visible>Container.Content(movies) | Container.Content(tvshows) | Container.Content(musicvideos) | Container.Content(seasons) | Container.Content(genres) | Container.Content(sets)</visible>
		<viewtype label="31077">bigwrap</viewtype>
		<pagecontrol>72</pagecontrol>
		<scrolltime tween="quadratic">300</scrolltime>
		<focusposition>3</focusposition>
		<orientation>horizontal</orientation>
		<preloaditems>2</preloaditems>
		<itemlayout height="525" width="260" condition="![Skin.HasSetting(noshowcaseflow) + !Control.IsVisible(6000)]"></itemlayout>
		<focusedlayout height="525" width="260" condition="![Skin.HasSetting(noshowcaseflow) + !Control.IsVisible(6000)]"></focusedlayout>
		<itemlayout height="525" width="294" condition="Skin.HasSetting(noshowcaseflow)">
			<control type="group">
				<top>30</top>
				<animation effect="zoom" start="80" end="90" center="147,345" time="300" reversible="false" tween="cubic">Focus</animation>
				<animation effect="fade" time="0" delay="800">Visible</animation>
				<control type="image">
					<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem0Var]</texture>
					<include>MovieShowcaseThumb</include>
				</control>
				<control type="image">
					<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem0Var]</texture>
					<include>MovieShowcaseThumbReflection</include>
				</control>
				<control type="image">
					<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes0Var]p.png</texture>
					<include>MovieShowcaseCase</include>
				</control>
				<control type="image">
					<texture background="true">thumbs/boxes/clearcases/$VAR[GlobalCaseVar]</texture>
					<include>MovieShowcaseClearCase</include>
				</control>
				<control type="image">
					<include>WatchedOverlayShowCase</include>
					<texture>$VAR[IconOverlay0Var]</texture>
				</control>
				<control type="image">
					<include>WatchedOverlayShowCase2</include>
					<texture>$VAR[IconOverlay0Var]</texture>
				</control>
				<control type="image">
					<include>WatchedOverlayShowCase3</include>
					<texture>$VAR[IconOverlay0Var]</texture>
				</control>
			</control>
		</itemlayout>
		<focusedlayout height="525" width="294" condition="Skin.HasSetting(noshowcaseflow)">
			<control type="group">
				<top>30</top>
				<animation effect="fade" time="0" delay="800">Visible</animation>
				<animation effect="zoom" start="80" end="100" center="147,345" time="300" reversible="false" tween="cubic">Focus</animation>
				<control type="image">
					<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/back_$VAR[ShowcaseRes0Var]p.png</texture>
					<include>MovieShowcaseCaseReflection</include>
				</control>
				<control type="image">
					<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem0Var]</texture>
					<include>MovieShowcaseThumbReflection</include>
					<animation type="conditional" reversible="false" condition="[Skin.HasSetting(showcasemod) + !Container.Content(genres) + Skin.HasSetting(toggleshowcasecovers) + !IsEmpty(Control.GetLabel(4444)) + Control.IsVisible(4444)] + ![SubString(ListItem.Path,videodb://movies/sets) + !Stringcompare(ListItem.Label,..)]">
						<effect type="rotatey" center="19" start="0" end="65" time="1000" tween="quadratic" easing="out"/>
						<effect type="rotatey" delay="5000" center="19" start="0" end="-65" time="1000" tween="quadratic" easing="out"/>
					</animation>
				</control>
				<control type="image">
					<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes0Var]p.png</texture>
					<include>MovieShowcaseCaseReflection</include>
					<animation type="conditional" reversible="false" condition="[Skin.HasSetting(showcasemod) + !Container.Content(genres) + Skin.HasSetting(toggleshowcasecovers) + !IsEmpty(Control.GetLabel(4444)) + Control.IsVisible(4444)] + ![SubString(ListItem.Path,videodb://movies/sets) + !Stringcompare(ListItem.Label,..)]">
						<effect type="rotatey" center="19" start="0" end="65" time="1000" tween="quadratic" easing="out"/>
						<effect type="rotatey" delay="5000" center="19" start="0" end="-65" time="1000" tween="quadratic" easing="out"/>
					</animation>
				</control>
				<control type="image">
					<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/back_$VAR[ShowcaseRes0Var]p.png</texture>
					<include>MovieShowcaseCase</include>
				</control>
				<control type="image">
					<texture background="true" fallback="thumbs/boxes/clearcases/p.png">thumbs/boxes/clearcases/back_$VAR[ShowcaseRes0Var]p.png</texture>
					<include>MovieShowcaseClearCase</include>
				</control>
				<control type="image">
					<left>28</left>
					<top>85</top>
					<width>235</width>
					<height>230</height>
					<visible>Skin.HasSetting(showcasemod) + ![SubString(ListItem.Path,videodb://movies/sets) + !Stringcompare(ListItem.Label,..)]</visible>
					<texture  background="true" fallback="bd.png">$INFO[ListItem(0).Art(discart)]</texture>
					<animation type="Conditional" condition="[Skin.HasSetting(showcasemod) + !Container.Content(genres) + Skin.HasSetting(toggleshowcasecovers) + !IsEmpty(Control.GetLabel(4444)) + Control.IsVisible(4444)]" reversible="false">
						<effect type="slide" start="1100,0" end="0,0" delay="0" time="2300" tween="cubic" easing="inout"/>
						<effect type="rotate" start="0" center="auto" end="720" delay="0" time="2300" tween="cubic" easing="inout"/>
					</animation>
				</control>
				<control type="image">
					<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem0Var]</texture>
					<include>MovieShowcaseThumb</include>
					<animation type="conditional" reversible="false" condition="[Skin.HasSetting(showcasemod) + !Container.Content(genres) + Skin.HasSetting(toggleshowcasecovers) + !IsEmpty(Control.GetLabel(4444)) + Control.IsVisible(4444)] + ![SubString(ListItem.Path,videodb://movies/sets) + !Stringcompare(ListItem.Label,..)]">
						<effect type="rotatey" center="19" start="0" end="65" time="1000" tween="quadratic" easing="out"/>
						<effect type="rotatey" delay="5000" center="19" start="0" end="-65" time="1000" tween="quadratic" easing="out"/>
					</animation>
				</control>
				<control type="image">
					<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes0Var]p.png</texture>
					<include>MovieShowcaseCase</include>
					<animation type="conditional" reversible="false" condition="[Skin.HasSetting(showcasemod) + !Container.Content(genres) + Skin.HasSetting(toggleshowcasecovers) + !IsEmpty(Control.GetLabel(4444)) + Control.IsVisible(4444)] + ![SubString(ListItem.Path,videodb://movies/sets) + !Stringcompare(ListItem.Label,..)]">
						<effect type="rotatey" center="19" start="0" end="65" time="1000" tween="quadratic" easing="out"/>
						<effect type="rotatey" delay="5000" center="19" start="0" end="-65" time="1000" tween="quadratic" easing="out"/>
					</animation>
				</control>
				<control type="image">
					<texture background="true" fallback="thumbs/boxes/clearcases/p.png">thumbs/boxes/clearcases/$VAR[ShowcaseRes0Var]p.png</texture>
					<include>MovieShowcaseClearCase</include>
					<animation type="conditional" reversible="false" condition="[Skin.HasSetting(showcasemod) + !Container.Content(genres) + Skin.HasSetting(toggleshowcasecovers) + !IsEmpty(Control.GetLabel(4444)) + Control.IsVisible(4444)] + ![SubString(ListItem.Path,videodb://movies/sets) + !Stringcompare(ListItem.Label,..)]">
						<effect type="rotatey" center="19" start="0" end="65" time="1000" tween="quadratic" easing="out"/>
						<effect type="rotatey" delay="5000" center="19" start="0" end="-65" time="1000" tween="quadratic" easing="out"/>
					</animation>
				</control>
				<control type="image">
					<texture background="true">$VAR[IconOverlay0Var]</texture>
					<include>WatchedOverlayShowCase</include>
					<animation type="conditional" reversible="false" condition="[Skin.HasSetting(showcasemod) + !Container.Content(genres) + Skin.HasSetting(toggleshowcasecovers) + !IsEmpty(Control.GetLabel(4444)) + Control.IsVisible(4444)] + ![SubString(ListItem.Path,videodb://movies/sets) + !Stringcompare(ListItem.Label,..)]">
						<effect type="rotatey" center="19" start="0" end="65" time="1000" tween="quadratic" easing="out"/>
						<effect type="rotatey" delay="5000" center="19" start="0" end="-65" time="1000" tween="quadratic" easing="out"/>
					</animation>
				</control>
				<control type="image">
					<texture background="true">$VAR[IconOverlay0Var]</texture>
					<include>WatchedOverlayShowCase2</include>
					<animation type="conditional" reversible="false" condition="[Skin.HasSetting(showcasemod) + !Container.Content(genres) + Skin.HasSetting(toggleshowcasecovers) + !IsEmpty(Control.GetLabel(4444)) + Control.IsVisible(4444)] + ![SubString(ListItem.Path,videodb://movies/sets) + !Stringcompare(ListItem.Label,..)]">
						<effect type="rotatey" center="19" start="0" end="65" time="1000" tween="quadratic" easing="out"/>
						<effect type="rotatey" delay="5000" center="19" start="0" end="-65" time="1000" tween="quadratic" easing="out"/>
					</animation>
				</control>
				<control type="image">
					<texture background="true">$VAR[IconOverlay0Var]</texture>
					<include>WatchedOverlayShowCase3</include>
					<animation type="conditional" reversible="false" condition="[Skin.HasSetting(showcasemod) + !Container.Content(genres) + Skin.HasSetting(toggleshowcasecovers) + !IsEmpty(Control.GetLabel(4444)) + Control.IsVisible(4444)] + ![SubString(ListItem.Path,videodb://movies/sets) + !Stringcompare(ListItem.Label,..)]">
						<effect type="rotatey" center="19" start="0" end="65" time="1000" tween="quadratic" easing="out"/>
						<effect type="rotatey" delay="5000" center="19" start="0" end="-65" time="1000" tween="quadratic" easing="out"/>
					</animation>
				</control>
				<control type="group">
					<left>28</left>
					<top>22</top>
					<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon0</include>
				</control>
			</control>
		</focusedlayout>
	</include>

	<include name="MovieShowcaseThumb">
		<left>-4</left>
		<top>-10</top>
		<width>304</width>
		<height>436</height>
		<align>center</align>
		<aspectratio scalediffuse="false">scale</aspectratio>
		<fadetime>0</fadetime>
		<bordertexture border="20">thumbs/thumb_shadow_aa.png</bordertexture>
		<bordersize>20</bordersize>
	</include>
	<include name="MovieShowcaseCase">
		<left>-36</left>
		<top>-50</top>
		<width>370</width>
		<height>500</height>
		<fadetime>0</fadetime>
		<bordersize>20</bordersize>
		<visible>Skin.HasSetting(toggleshowcasecovers) + !Skin.HasSetting(useclearcases) + [Container.Content(movies) | Container.Content(sets) | Container.Content(musicvideos)]</visible>
	</include>
	<include name="MovieShowcaseClearCase">
		<left>-52</left>
		<top>-48</top>
		<width>370</width>
		<height>500</height>
		<fadetime>0</fadetime>
		<bordersize>20</bordersize>
		<visible>Skin.HasSetting(toggleshowcasecovers) + Skin.HasSetting(useclearcases) + [Container.Content(movies) | Container.Content(sets) | Container.Content(musicvideos)]</visible>
	</include>
	<include name="MovieShowcaseThumbReflection">
		<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
		<fadetime>0</fadetime>
		<left>16</left>
		<top>425</top>
		<width>264</width>
		<height>396</height>
		<colordiffuse>d1FFFFFF</colordiffuse>
	</include>
	<include name="MovieShowcaseCaseReflection">
		<aspectratio scalediffuse="false" aligny="top">stretch</aspectratio>
		<fadetime>0</fadetime>
		<left>-16</left>
		<top>400</top>
		<width>330</width>
		<height>406</height>
		<colordiffuse>d1FFFFFF</colordiffuse>
		<visible>!Skin.HasSetting(useclearcases)</visible>
	</include>
	<include name="WatchedOverlayShowCase">
		<left>192</left>
		<top>-10</top>
		<width>120</width>
		<height>120</height>
		<fadetime>0</fadetime>
		<bordersize>20</bordersize>
		<visible>[!Skin.HasSetting(toggleshowcasecovers) + Container.Content(movies)] | [Container.Content(seasons) | Container.Content(tvshows)]</visible>
	</include>
	<include name="WatchedOverlayShowCase2">
		<left>197</left>
		<top>-34</top>
		<width>120</width>
		<height>120</height>
		<fadetime>0</fadetime>
		<bordersize>20</bordersize>
		<visible>[Skin.HasSetting(toggleshowcasecovers) + !Skin.HasSetting(useclearcases) + Container.Content(movies) + [!Container.Content(seasons) | !Container.Content(tvshows)]]</visible>
	</include>
	<include name="WatchedOverlayShowCase3">
		<left>190</left>
		<top>-10</top>
		<width>120</width>
		<height>120</height>
		<fadetime>0</fadetime>
		<bordersize>20</bordersize>
		<visible>[Skin.HasSetting(toggleshowcasecovers) + Skin.HasSetting(useclearcases) + Container.Content(movies) + [!Container.Content(seasons) | !Container.Content(tvshows)]]</visible>
	</include>
	<include name="MovieShowCaseItem-7">
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/back_$VAR[ShowcaseRes-7Var]p.png</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/clearcases/p.png">thumbs/boxes/clearcases/back_$VAR[ShowcaseRes-7Var]p.png</texture>
			<include>MovieShowcaseClearCase</include>
		</control>
		<control type="image">
			<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem-7Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes-7Var]p.png</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/clearcases/p.png">thumbs/boxes/clearcases/$VAR[ShowcaseRes-7Var]p.png</texture>
			<include>MovieShowcaseClearCase</include>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-7</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/back_$VAR[ShowcaseRes-7Var]p.png</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-7Var]</texture>
			<include>MovieShowcaseThumbReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes-7Var]p.png</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem-6">
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/back_$VAR[ShowcaseRes-6Var]p.png</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/clearcases/p.png">thumbs/boxes/clearcases/back_$VAR[ShowcaseRes-6Var]p.png</texture>
			<include>MovieShowcaseClearCase</include>
		</control>
		<control type="image">
			<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem-6Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes-6Var]p.png</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/clearcases/p.png">thumbs/boxes/clearcases/$VAR[ShowcaseRes-6Var]p.png</texture>
			<include>MovieShowcaseClearCase</include>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-6</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/back_$VAR[ShowcaseRes-6Var]p.png</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-6Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
			<width>121</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes-6Var]p.png</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem-5">
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/back_$VAR[ShowcaseRes-5Var]p.png</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/clearcases/p.png">thumbs/boxes/clearcases/back_$VAR[ShowcaseRes-5Var]p.png</texture>
			<include>MovieShowcaseClearCase</include>
		</control>
		<control type="image">
			<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem-5Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/clearcases/p.png">thumbs/boxes/$VAR[ShowcaseRes-5Var]p.png</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/clearcases/p.png">thumbs/boxes/clearcases/$VAR[ShowcaseRes-5Var]p.png</texture>
			<include>MovieShowcaseClearCase</include>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-5</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/back_$VAR[ShowcaseRes-5Var]p.png</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-5Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
			<width>131</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes-5Var]p.png</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem-4">
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/back_$VAR[ShowcaseRes-4Var]p.png</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem-4Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes-4Var]p.png</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/clearcases/p.png">thumbs/boxes/clearcases/$VAR[ShowcaseRes-4Var]p.png</texture>
			<include>MovieShowcaseClearCase</include>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-4</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/back_$VAR[ShowcaseRes-4Var]p.png</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-4Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
			<width>145</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes-4Var]p.png</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem-3">
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/back_$VAR[ShowcaseRes-3Var]p.png</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem-3Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes-3Var]p.png</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/clearcases/p.png">thumbs/boxes/clearcases/$VAR[ShowcaseRes-3Var]p.png</texture>
			<include>MovieShowcaseClearCase</include>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-3</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/back_$VAR[ShowcaseRes-3Var]p.png</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-3Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
			<width>160</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes-3Var]p.png</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem-2">
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/back_$VAR[ShowcaseRes-2Var]p.png</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem-2Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes-2Var]p.png</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/clearcases/p.png">thumbs/boxes/clearcases/$VAR[ShowcaseRes-2Var]p.png</texture>
			<include>MovieShowcaseClearCase</include>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-2</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/back_$VAR[ShowcaseRes-2Var]p.png</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-2Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
			<width>179</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes-2Var]p.png</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem-1">
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/back_$VAR[ShowcaseRes-1Var]p.png</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem-1Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes-1Var]p.png</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/clearcases/p.png">thumbs/boxes/clearcases/$VAR[ShowcaseRes-1Var]p.png</texture>
			<include>MovieShowcaseClearCase</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay-1Var]</texture>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase2</include>
			<texture>$VAR[IconOverlay-1Var]</texture>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase3</include>
			<texture>$VAR[IconOverlay-1Var]</texture>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-1</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/back_$VAR[ShowcaseRes-1Var]p.png</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-1Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
			<width>180</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes-1Var]p.png</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem0">
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/back_$VAR[ShowcaseRes0Var]p.png</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem0Var]</texture>
			<include>MovieShowcaseThumbReflection</include>
			<animation type="conditional" reversible="false" condition="[Skin.HasSetting(showcasemod) + !Container.Content(genres) + Skin.HasSetting(toggleshowcasecovers) + !IsEmpty(Control.GetLabel(4444)) + Control.IsVisible(4444)]">
				<effect type="rotatey" center="19" start="0" end="65" time="1000" tween="quadratic" easing="out"/>
				<effect type="rotatey" delay="5000" center="19" start="0" end="-65" time="1000" tween="quadratic" easing="out"/>
			</animation>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes0Var]p.png</texture>
			<include>MovieShowcaseCaseReflection</include>
			<animation type="conditional" reversible="false" condition="[Skin.HasSetting(showcasemod) + !Container.Content(genres) + Skin.HasSetting(toggleshowcasecovers) + !IsEmpty(Control.GetLabel(4444)) + Control.IsVisible(4444)]">
				<effect type="rotatey" center="19" start="0" end="65" time="1000" tween="quadratic" easing="out"/>
				<effect type="rotatey" delay="5000" center="19" start="0" end="-65" time="1000" tween="quadratic" easing="out"/>
			</animation>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/back_$VAR[ShowcaseRes0Var]p.png</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/clearcases/p.png">thumbs/boxes/clearcases/back_$VAR[ShowcaseRes0Var]p.png</texture>
			<include>MovieShowcaseClearCase</include>
		</control>
		<control type="group">
			<left>28</left>
			<top>85</top>
			<width>235</width>
			<height>230</height>
			<visible>Skin.HasSetting(showcasemod)</visible>
			<control type="image">
				<texture  background="true" fallback="bd.png">$INFO[ListItem(0).Art(discart)]</texture>
				<animation type="Conditional" condition="[Skin.HasSetting(showcasemod) + !Container.Content(genres) + Skin.HasSetting(toggleshowcasecovers) + !IsEmpty(Control.GetLabel(4444)) + Control.IsVisible(4444)]" reversible="false">
					<effect type="slide" start="1100,0" end="0,0" delay="0" time="2300" tween="cubic" easing="inout"/>
					<effect type="rotate" start="0" center="auto" end="720" delay="0" time="2300" tween="cubic" easing="inout"/>
				</animation>
				<visible>![SubString(ListItem.Path,videodb://movies/sets) + !Stringcompare(ListItem.Label,..)]</visible>
			</control>
			<control type="image">
				<aspectratio align="bottom">keep</aspectratio>
				<texture background="true">$INFO[Window(home).Property(Set.Movie.1.Art(discart))]</texture>
				<animation type="Conditional" condition="[Skin.HasSetting(showcasemod) + !Container.Content(genres) + Skin.HasSetting(toggleshowcasecovers) + !IsEmpty(Control.GetLabel(4444)) + Control.IsVisible(4444)]" reversible="false">
					<effect type="slide" start="1100,0" end="0,0" delay="0" time="2300" tween="cubic" easing="inout"/>
					<effect type="rotate" start="0" center="auto" end="720" delay="0" time="2300" tween="cubic" easing="inout"/>
				</animation>
				<visible>!IsEmpty(Window(home).Property(Set.Movie.1.Art(discart))) + SubString(ListItem(0).Path,videodb://movies/sets/ )</visible>
			</control>
			<control type="image">
				<aspectratio align="bottom">keep</aspectratio>
				<texture background="true">$INFO[Window(home).Property(Set.Movie.2.Art(discart))]</texture>
				<animation type="Conditional" condition="[Skin.HasSetting(showcasemod) + !Container.Content(genres) + Skin.HasSetting(toggleshowcasecovers) + !IsEmpty(Control.GetLabel(4444)) + Control.IsVisible(4444)]" reversible="false">
					<effect type="slide" start="1100,0" end="0,0" delay="500" time="2300" tween="cubic" easing="inout"/>
					<effect type="rotate" start="0" center="auto" end="720" delay="500" time="2300" tween="cubic" easing="inout"/>
				</animation>
				<visible>!IsEmpty(Window(home).Property(Set.Movie.2.Art(discart))) + SubString(ListItem(0).Path,videodb://movies/sets/ )</visible>
			</control>
			<control type="image">
				<aspectratio align="bottom">keep</aspectratio>
				<texture background="true">$INFO[Window(home).Property(Set.Movie.3.Art(discart))]</texture>
				<animation type="Conditional" condition="[Skin.HasSetting(showcasemod) + !Container.Content(genres) + Skin.HasSetting(toggleshowcasecovers) + !IsEmpty(Control.GetLabel(4444)) + Control.IsVisible(4444)]" reversible="false">
					<effect type="slide" start="1100,0" end="0,0" delay="1000" time="2300" tween="cubic" easing="inout"/>
					<effect type="rotate" start="0" center="auto" end="720" delay="1000" time="2300" tween="cubic" easing="inout"/>
				</animation>
				<visible>!IsEmpty(Window(home).Property(Set.Movie.3.Art(discart))) + SubString(ListItem(0).Path,videodb://movies/sets/ )</visible>
			</control>
			<control type="image">
				<aspectratio align="bottom">keep</aspectratio>
				<texture background="true">$INFO[Window(home).Property(Set.Movie.4.Art(discart))]</texture>
				<animation type="Conditional" condition="[Skin.HasSetting(showcasemod) + !Container.Content(genres) + Skin.HasSetting(toggleshowcasecovers) + !IsEmpty(Control.GetLabel(4444)) + Control.IsVisible(4444)]" reversible="false">
					<effect type="slide" start="1100,0" end="0,0" delay="1500" time="2300" tween="cubic" easing="inout"/>
					<effect type="rotate" start="0" center="auto" end="720" delay="1500" time="2300" tween="cubic" easing="inout"/>
				</animation>
				<visible>!IsEmpty(Window(home).Property(Set.Movie.4.Art(discart))) + SubString(ListItem(0).Path,videodb://movies/sets/ )</visible>
			</control>
			<control type="image">
				<aspectratio align="bottom">keep</aspectratio>
				<texture background="true">$INFO[Window(home).Property(Set.Movie.5.Art(discart))]</texture>
				<animation type="Conditional" condition="[Skin.HasSetting(showcasemod) + !Container.Content(genres) + Skin.HasSetting(toggleshowcasecovers) + !IsEmpty(Control.GetLabel(4444)) + Control.IsVisible(4444)]" reversible="false">
					<effect type="slide" start="1100,0" end="0,0" delay="2000" time="2300" tween="cubic" easing="inout"/>
					<effect type="rotate" start="0" center="auto" end="720" delay="2000" time="2300" tween="cubic" easing="inout"/>
				</animation>
				<visible>!IsEmpty(Window(home).Property(Set.Movie.5.Art(discart))) + SubString(ListItem(0).Path,videodb://movies/sets/ )</visible>
			</control>
			<control type="image">
				<aspectratio align="bottom">keep</aspectratio>
				<texture background="true">$INFO[Window(home).Property(Set.Movie.6.Art(discart))]</texture>
				<animation type="Conditional" condition="[Skin.HasSetting(showcasemod) + !Container.Content(genres) + Skin.HasSetting(toggleshowcasecovers) + !IsEmpty(Control.GetLabel(4444)) + Control.IsVisible(4444)]" reversible="false">
					<effect type="slide" start="1100,0" end="0,0" delay="2500" time="2300" tween="cubic" easing="inout"/>
					<effect type="rotate" start="0" center="auto" end="720" delay="2500" time="2300" tween="cubic" easing="inout"/>
				</animation>
				<visible>!IsEmpty(Window(home).Property(Set.Movie.6.Art(discart))) + SubString(ListItem(0).Path,videodb://movies/sets/ )</visible>
			</control>
		</control>
		<control type="image">
			<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem0Var]</texture>
			<include>MovieShowcaseThumb</include>
			<animation type="conditional" reversible="false" condition="[Skin.HasSetting(showcasemod) + !Container.Content(genres) + Skin.HasSetting(toggleshowcasecovers) + !IsEmpty(Control.GetLabel(4444)) + Control.IsVisible(4444)]">
				<effect type="rotatey" center="19" start="0" end="65" time="1000" tween="quadratic" easing="out"/>
				<effect type="rotatey" delay="5000" center="19" start="0" end="-65" time="1000" tween="quadratic" easing="out"/>
			</animation>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes0Var]p.png</texture>
			<include>MovieShowcaseCase</include>
			<animation type="conditional" reversible="false" condition="[Skin.HasSetting(showcasemod) + !Container.Content(genres) + Skin.HasSetting(toggleshowcasecovers) + !IsEmpty(Control.GetLabel(4444)) + Control.IsVisible(4444)]">
				<effect type="rotatey" center="19" start="0" end="65" time="1000" tween="quadratic" easing="out"/>
				<effect type="rotatey" delay="5000" center="19" start="0" end="-65" time="1000" tween="quadratic" easing="out"/>
			</animation>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/clearcases/p.png">thumbs/boxes/clearcases/$VAR[ShowcaseRes0Var]p.png</texture>
			<include>MovieShowcaseClearCase</include>
			<animation type="conditional" reversible="false" condition="[Skin.HasSetting(showcasemod) + !Container.Content(genres) + Skin.HasSetting(toggleshowcasecovers) + !IsEmpty(Control.GetLabel(4444)) + Control.IsVisible(4444)]">
				<effect type="rotatey" center="19" start="0" end="65" time="1000" tween="quadratic" easing="out"/>
				<effect type="rotatey" delay="5000" center="19" start="0" end="-65" time="1000" tween="quadratic" easing="out"/>
			</animation>
		</control>
		<control type="image">
			<texture background="true">$VAR[IconOverlay0Var]</texture>
			<include>WatchedOverlayShowCase</include>
			<animation type="conditional" reversible="false" condition="[Skin.HasSetting(showcasemod) + !Container.Content(genres) + Skin.HasSetting(toggleshowcasecovers) + !IsEmpty(Control.GetLabel(4444)) + Control.IsVisible(4444)]">
				<effect type="rotatey" center="19" start="0" end="65" time="1000" tween="quadratic" easing="out"/>
				<effect type="rotatey" delay="5000" center="19" start="0" end="-65" time="1000" tween="quadratic" easing="out"/>
			</animation>
		</control>
		<control type="image">
			<texture background="true">$VAR[IconOverlay0Var]</texture>
			<include>WatchedOverlayShowCase2</include>
			<animation type="conditional" reversible="false" condition="[Skin.HasSetting(showcasemod) + !Container.Content(genres) + Skin.HasSetting(toggleshowcasecovers) + !IsEmpty(Control.GetLabel(4444)) + Control.IsVisible(4444)]">
				<effect type="rotatey" center="19" start="0" end="65" time="1000" tween="quadratic" easing="out"/>
				<effect type="rotatey" delay="5000" center="19" start="0" end="-65" time="1000" tween="quadratic" easing="out"/>
			</animation>
		</control>
		<control type="image">
			<texture background="true">$VAR[IconOverlay0Var]</texture>
			<include>WatchedOverlayShowCase3</include>
			<animation type="conditional" reversible="false" condition="[Skin.HasSetting(showcasemod) + !Container.Content(genres) + Skin.HasSetting(toggleshowcasecovers) + !IsEmpty(Control.GetLabel(4444)) + Control.IsVisible(4444)]">
				<effect type="rotatey" center="19" start="0" end="65" time="1000" tween="quadratic" easing="out"/>
				<effect type="rotatey" delay="5000" center="19" start="0" end="-65" time="1000" tween="quadratic" easing="out"/>
			</animation>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon0</include>
		</control>
	</include>
	<include name="MovieShowCaseItem1">
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/back_$VAR[ShowcaseRes1Var]p.png</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem1Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes1Var]p.png</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/clearcases/p.png">thumbs/boxes/clearcases/$VAR[ShowcaseRes1Var]p.png</texture>
			<include>MovieShowcaseClearCase</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay1Var]</texture>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase2</include>
			<texture>$VAR[IconOverlay1Var]</texture>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase3</include>
			<texture>$VAR[IconOverlay1Var]</texture>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon1</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/back_$VAR[ShowcaseRes1Var]p.png</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem1Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
			<left>86</left>
			<width>192</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes1Var]p.png</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem2">
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/back_$VAR[ShowcaseRes2Var]p.png</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem2Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes2Var]p.png</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/clearcases/p.png">thumbs/boxes/clearcases/$VAR[ShowcaseRes2Var]p.png</texture>
			<include>MovieShowcaseClearCase</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay2Var]</texture>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase2</include>
			<texture>$VAR[IconOverlay2Var]</texture>
		</control>

		<control type="image">
			<include>WatchedOverlayShowCase3</include>
			<texture>$VAR[IconOverlay2Var]</texture>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/back_$VAR[ShowcaseRes2Var]p.png</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem2Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
			<left>102</left>
			<width>177</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes2Var]p.png</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem3">
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/back_$VAR[ShowcaseRes3Var]p.png</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem3Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes3Var]p.png</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/clearcases/p.png">thumbs/boxes/clearcases/$VAR[ShowcaseRes3Var]p.png</texture>
			<include>MovieShowcaseClearCase</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay3Var]</texture>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase2</include>
			<texture>$VAR[IconOverlay3Var]</texture>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase3</include>
			<texture>$VAR[IconOverlay3Var]</texture>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/back_$VAR[ShowcaseRes3Var]p.png</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem3Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
			<left>121</left>
			<width>158</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes3Var]p.png</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem4">
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/back_$VAR[ShowcaseRes4Var]p.png</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem4Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes4Var]p.png</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/clearcases/p.png">thumbs/boxes/clearcases/$VAR[ShowcaseRes4Var]p.png</texture>
			<include>MovieShowcaseClearCase</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay4Var]</texture>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase2</include>
			<texture>$VAR[IconOverlay4Var]</texture>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase3</include>
			<texture>$VAR[IconOverlay4Var]</texture>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/back_$VAR[ShowcaseRes4Var]p.png</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem4Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
			<left>136</left>
			<width>142</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes4Var]p.png</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem5">
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/back_$VAR[ShowcaseRes5Var]p.png</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem5Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes5Var]p.png</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/clearcases/p.png">thumbs/boxes/clearcases/$VAR[ShowcaseRes5Var]p.png</texture>
			<include>MovieShowcaseClearCase</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay5Var]</texture>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase2</include>
			<texture>$VAR[IconOverlay5Var]</texture>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase3</include>
			<texture>$VAR[IconOverlay5Var]</texture>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/back_$VAR[ShowcaseRes5Var]p.png</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem5Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
			<left>146</left>
			<width>133</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes5Var]p.png</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem6">
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/back_$VAR[ShowcaseRes6Var]p.png</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem6Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes6Var]p.png</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/clearcases/p.png">thumbs/boxes/clearcases/$VAR[ShowcaseRes6Var]p.png</texture>
			<include>MovieShowcaseClearCase</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay6Var]</texture>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase2</include>
			<texture>$VAR[IconOverlay6Var]</texture>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase3</include>
			<texture>$VAR[IconOverlay6Var]</texture>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/back_$VAR[ShowcaseRes6Var]p.png</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem6Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
			<left>158</left>
			<width>122</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes6Var]p.png</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem7">
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/back_$VAR[ShowcaseRes7Var]p.png</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem7Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes7Var]p.png</texture>
			<include>MovieShowcaseCase</include>
		</control>
		<control type="image">
			<texture background="true" fallback="thumbs/boxes/clearcases/p.png">thumbs/boxes/clearcases/$VAR[ShowcaseRes7Var]p.png</texture>
			<include>MovieShowcaseClearCase</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay7Var]</texture>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase2</include>
			<texture>$VAR[IconOverlay7Var]</texture>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase3</include>
			<texture>$VAR[IconOverlay7Var]</texture>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/back_$VAR[ShowcaseRes7Var]p.png</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem7Var]</texture>
			<include>MovieShowcaseThumbReflection</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="thumbs/boxes/p.png">thumbs/boxes/$VAR[ShowcaseRes7Var]p.png</texture>
			<include>MovieShowcaseCaseReflection</include>
		</control>
	</include>
	<variable name="ShowcaseItem-7Var">
		<value condition="!IsEmpty(ListItem(-7).Art(poster))">$INFO[ListItem(-7).Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(-7).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(-7).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(-7).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-6Var">
		<value condition="!IsEmpty(ListItem(-6).Art(poster))">$INFO[ListItem(-6).Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(-6).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(-6).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(-6).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-5Var">
		<value condition="!IsEmpty(ListItem(-5).Art(poster))">$INFO[ListItem(-5).Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(-5).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(-5).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(-5).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-4Var">
		<value condition="!IsEmpty(ListItem(-4).Art(poster))">$INFO[ListItem(-4).Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(-4).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(-4).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(-4).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-3Var">
		<value condition="!IsEmpty(ListItem(-3).Art(poster))">$INFO[ListItem(-3).Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(-3).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(-3).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(-3).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-2Var">
		<value condition="!IsEmpty(ListItem(-2).Art(poster))">$INFO[ListItem(-2).Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(-2).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(-2).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(-2).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-1Var">
		<value condition="!IsEmpty(ListItem(-1).Art(poster))">$INFO[ListItem(-1).Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(-1).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(-1).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(-1).Icon]</value>
	</variable>
	<variable name="ShowcaseItem0Var">
		<value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem.Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem.Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="ShowcaseItem1Var">
		<value condition="!IsEmpty(ListItem(1).Art(poster))">$INFO[ListItem(1).Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(1).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(1).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(1).Icon]</value>
	</variable>
	<variable name="ShowcaseItem2Var">
		<value condition="!IsEmpty(ListItem(2).Art(poster))">$INFO[ListItem(2).Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(2).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(2).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(2).Icon]</value>
	</variable>
	<variable name="ShowcaseItem3Var">
		<value condition="!IsEmpty(ListItem(3).Art(poster))">$INFO[ListItem(3).Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(3).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(3).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(3).Icon]</value>
	</variable>
	<variable name="ShowcaseItem4Var">
		<value condition="!IsEmpty(ListItem(4).Art(poster))">$INFO[ListItem(4).Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(4).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(4).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(4).Icon]</value>
	</variable>
	<variable name="ShowcaseItem5Var">
		<value condition="!IsEmpty(ListItem(5).Art(poster))">$INFO[ListItem(5).Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(5).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(5).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(5).Icon]</value>
	</variable>
	<variable name="ShowcaseItem6Var">
		<value condition="!IsEmpty(ListItem(6).Art(poster))">$INFO[ListItem(6).Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(6).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(6).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(6).Icon]</value>
	</variable>
	<variable name="ShowcaseItem7Var">
		<value condition="!IsEmpty(ListItem(7).Art(poster))">$INFO[ListItem(7).Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(7).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(7).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(7).Icon]</value>
	</variable>
	<variable name="ShowcaseItem8Var">
		<value condition="!IsEmpty(ListItem(8).Art(poster))">$INFO[ListItem(8).Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(8).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(8).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(8).Icon]</value>
	</variable>
	<variable name="ShowcaseItem9Var">
		<value condition="!IsEmpty(ListItem(9).Art(poster))">$INFO[ListItem(9).Art(poster)]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(9).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(9).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(9).Icon]</value>
	</variable>
	<variable name="ShowcaseRes-7Var">
		<value condition="SubString(ListItem(-7).Filename,.3D.)">3d</value>
		<value>$INFO[ListItem(-7).VideoResolution]</value>
	</variable>
	<variable name="ShowcaseRes-6Var">
		<value condition="SubString(ListItem(-6).Filename,.3D.)">3d</value>
		<value>$INFO[ListItem(-6).VideoResolution]</value>
	</variable>
	<variable name="ShowcaseRes-5Var">
		<value condition="SubString(ListItem(-5).Filename,.3D.)">3d</value>
		<value>$INFO[ListItem(-5).VideoResolution]</value>
	</variable>
	<variable name="ShowcaseRes-4Var">
		<value condition="SubString(ListItem(-4).Filename,.3D.)">3d</value>
		<value>$INFO[ListItem(-4).VideoResolution]</value>
	</variable>
	<variable name="ShowcaseRes-3Var">
		<value condition="SubString(ListItem(-3).Filename,.3D.)">3d</value>
		<value>$INFO[ListItem(-3).VideoResolution]</value>
	</variable>
	<variable name="ShowcaseRes-2Var">
		<value condition="SubString(ListItem(-2).Filename,.3D.)">3d</value>
		<value>$INFO[ListItem(-2).VideoResolution]</value>
	</variable>
	<variable name="ShowcaseRes-1Var">
		<value condition="SubString(ListItem(-1).Filename,.3D.)">3d</value>
		<value>$INFO[ListItem(-1).VideoResolution]</value>
	</variable>
	<variable name="ShowcaseRes0Var">
		<value condition="SubString(ListItem(0).Filename,.3D.)">3d</value>
		<value>$INFO[ListItem.VideoResolution]</value>
	</variable>
	<variable name="ShowcaseRes1Var">
		<value condition="SubString(ListItem(1).Filename,.3D.)">3d</value>
		<value>$INFO[ListItem(1).VideoResolution]</value>
	</variable>
	<variable name="ShowcaseRes2Var">
		<value condition="SubString(ListItem(2).Filename,.3D.)">3d</value>
		<value>$INFO[ListItem(2).VideoResolution]</value>
	</variable>
	<variable name="ShowcaseRes3Var">
		<value condition="SubString(ListItem(3).Filename,.3D.)">3d</value>
		<value>$INFO[ListItem(3).VideoResolution]</value>
	</variable>
	<variable name="ShowcaseRes4Var">
		<value condition="SubString(ListItem(4).Filename,.3D.)">3d</value>
		<value>$INFO[ListItem(4).VideoResolution]</value>
	</variable>
	<variable name="ShowcaseRes5Var">
		<value condition="SubString(ListItem(5).Filename,.3D.)">3d</value>
		<value>$INFO[ListItem(5).VideoResolution]</value>
	</variable>
	<variable name="ShowcaseRes6Var">
		<value condition="SubString(ListItem(6).Filename,.3D.)">3d</value>
		<value>$INFO[ListItem(6).VideoResolution]</value>
	</variable>
	<variable name="ShowcaseRes7Var">
		<value condition="SubString(ListItem(7).Filename,.3D.)">3d</value>
		<value>$INFO[ListItem(7).VideoResolution]</value>
	</variable>
	<variable name="IconOverlay-1Var">
		<value condition="ListItem(-1).IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value condition="!Skin.HasSetting(coloredflags)">$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(-1).Overlay]</value>
		<value condition="Skin.HasSetting(coloredflags) + Skin.HasSetting(nocoloredoverlay)">$INFO[ListItem(-1).Overlay,overlays/showcase/4/]</value>
	</variable>
	<variable name="IconOverlay0Var">
		<value condition="ListItem.IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value condition="!Skin.HasSetting(coloredflags)">$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem.Overlay]</value>
		<value condition="Skin.HasSetting(coloredflags) + Skin.HasSetting(nocoloredoverlay)">$INFO[ListItem.Overlay,overlays/showcase/4/]</value>
	</variable>
	<variable name="IconOverlay1Var">
		<value condition="ListItem(1).IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value condition="!Skin.HasSetting(coloredflags)">$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(1).Overlay]</value>
		<value condition="Skin.HasSetting(coloredflags) + Skin.HasSetting(nocoloredoverlay)">$INFO[ListItem(1).Overlay,overlays/showcase/4/]</value>
	</variable>
	<variable name="IconOverlay2Var">
		<value condition="ListItem(2).IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value condition="!Skin.HasSetting(coloredflags)">$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(2).Overlay]</value>
		<value condition="Skin.HasSetting(coloredflags) + Skin.HasSetting(nocoloredoverlay)">$INFO[ListItem(2).Overlay,overlays/showcase/4/]</value>
	</variable>
	<variable name="IconOverlay3Var">
		<value condition="ListItem(3).IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>/value>
	<value condition="!Skin.HasSetting(coloredflags)">$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(3).Overlay]</value>
	<value condition="Skin.HasSetting(coloredflags) + Skin.HasSetting(nocoloredoverlay)">$INFO[ListItem(3).Overlay,overlays/showcase/4/]</value>
</variable>
<variable name="IconOverlay4Var">
	<value condition="ListItem(4).IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
	<value condition="!Skin.HasSetting(coloredflags)">$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(4).Overlay]</value>
	<value condition="Skin.HasSetting(coloredflags) + Skin.HasSetting(nocoloredoverlay)">$INFO[ListItem(4).Overlay,overlays/showcase/4/]</value>
</variable>
<variable name="IconOverlay5Var">
	<value condition="ListItem(5).IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
	<value condition="!Skin.HasSetting(coloredflags)">$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(5).Overlay]</value>
	<value condition="Skin.HasSetting(coloredflags) + Skin.HasSetting(nocoloredoverlay)">$INFO[ListItem(5).Overlay,overlays/showcase/4/]</value>
</variable>
<variable name="IconOverlay6Var">
	<value condition="ListItem(6).IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
	<value condition="!Skin.HasSetting(coloredflags)">$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(6).Overlay]</value>
	<value condition="Skin.HasSetting(coloredflags) + Skin.HasSetting(nocoloredoverlay)">$INFO[ListItem(6).Overlay,overlays/showcase/4/]</value>
</variable>
<variable name="IconOverlay7Var">
	<value condition="ListItem(7).IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
	<value condition="!Skin.HasSetting(coloredflags)">$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(7).Overlay]</value>
	<value condition="Skin.HasSetting(coloredflags) + Skin.HasSetting(nocoloredoverlay)">$INFO[ListItem(7).Overlay,overlays/showcase/4/]</value>
</variable>
<variable name="IconOverlay8Var">
	<value condition="ListItem(8).IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
	<value condition="!Skin.HasSetting(coloredflags)">$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(8).Overlay]</value>
	<value condition="Skin.HasSetting(coloredflags) + Skin.HasSetting(nocoloredoverlay)">$INFO[ListItem(8).Overlay,overlays/showcase/4/]</value>
</variable>
<variable name="IconOverlay9Var">
	<value condition="ListItem(9).IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
	<value condition="!Skin.HasSetting(coloredflags)">$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(9).Overlay]</value>
	<value condition="Skin.HasSetting(coloredflags) + Skin.HasSetting(nocoloredoverlay)">$INFO[ListItem(9).Overlay,overlays/showcase/4/]</value>
</variable>

<include name="UnwatchedIconCircle">
	<control type="image">
		<width>36</width>
		<height>36</height>
		<aspectratio>keep</aspectratio>
		<texture>circle.png</texture>
	</control>
</include>
<include name="UnwatchedIconVars">
	<top>2</top>
	<width>36</width>
	<height>36</height>
	<align>center</align>
	<aligny>top</aligny>
	<font>font10</font>
	<textcolor>FF000000</textcolor>
	<scroll>false</scroll>
</include>
<include name="UnwatchedIcon">
	<control type="group">
		<visible>[Container.Content(tvshows) | Container.Content(seasons)] + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),0)</visible>
		<include>UnwatchedIconCircle</include>
		<control type="label">
			<include>UnwatchedIconVars</include>
			<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
		</control>
	</control>
</include>
<include name="UnwatchedIcon1">
	<control type="group">
		<visible>[Container.Content(tvshows) | Container.Content(seasons)] + IntegerGreaterThan(ListItem(1).Property(UnWatchedEpisodes),0)</visible>
		<include>UnwatchedIconCircle</include>
		<control type="label">
			<include>UnwatchedIconVars</include>
			<label>$INFO[ListItem(1).Property(UnWatchedEpisodes)]</label>
		</control>
	</control>
</include>
<include name="UnwatchedIcon0">
	<control type="group">
		<visible>[Container.Content(tvshows) | Container.Content(seasons)] + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),0)</visible>
		<include>UnwatchedIconCircle</include>
		<control type="label">
			<include>UnwatchedIconVars</include>
			<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
		</control>
	</control>
</include>
<include name="UnwatchedIcon-1">
	<control type="group">
		<visible>[Container.Content(tvshows) | Container.Content(seasons)] + IntegerGreaterThan(ListItem(-1).Property(UnWatchedEpisodes),0)</visible>
		<include>UnwatchedIconCircle</include>
		<control type="label">
			<include>UnwatchedIconVars</include>
			<label>$INFO[ListItem(-1).Property(UnWatchedEpisodes)]</label>
		</control>
	</control>
</include>
<include name="UnwatchedIcon-2">
	<control type="group">
		<visible>[Container.Content(tvshows) | Container.Content(seasons)] + IntegerGreaterThan(ListItem(-2).Property(UnWatchedEpisodes),0)</visible>
		<include>UnwatchedIconCircle</include>
		<control type="label">
			<include>UnwatchedIconVars</include>
			<label>$INFO[ListItem(-2).Property(UnWatchedEpisodes)]</label>
		</control>
	</control>
</include>
<include name="UnwatchedIcon-3">
	<control type="group">
		<visible>[Container.Content(tvshows) | Container.Content(seasons)] + IntegerGreaterThan(ListItem(-3).Property(UnWatchedEpisodes),0)</visible>
		<include>UnwatchedIconCircle</include>
		<control type="label">
			<include>UnwatchedIconVars</include>
			<label>$INFO[ListItem(-3).Property(UnWatchedEpisodes)]</label>
		</control>
	</control>
</include>
<include name="UnwatchedIcon-4">
	<control type="group">
		<visible>[Container.Content(tvshows) | Container.Content(seasons)] + IntegerGreaterThan(ListItem(-4).Property(UnWatchedEpisodes),0)</visible>
		<include>UnwatchedIconCircle</include>
		<control type="label">
			<include>UnwatchedIconVars</include>
			<label>$INFO[ListItem(-4).Property(UnWatchedEpisodes)]</label>
		</control>
	</control>
</include>
<include name="UnwatchedIcon-5">
	<control type="group">
		<visible>[Container.Content(tvshows) | Container.Content(seasons)] + IntegerGreaterThan(ListItem(-5).Property(UnWatchedEpisodes),0)</visible>
		<include>UnwatchedIconCircle</include>
		<control type="label">
			<include>UnwatchedIconVars</include>
			<label>$INFO[ListItem(-5).Property(UnWatchedEpisodes)]</label>
		</control>
	</control>
</include>
<include name="UnwatchedIcon-6">
	<control type="group">
		<visible>[Container.Content(tvshows) | Container.Content(seasons)] + IntegerGreaterThan(ListItem(-6).Property(UnWatchedEpisodes),0)</visible>
		<include>UnwatchedIconCircle</include>
		<control type="label">
			<include>UnwatchedIconVars</include>
			<label>$INFO[ListItem(-6).Property(UnWatchedEpisodes)]</label>
		</control>
	</control>
</include>
<include name="UnwatchedIcon-7">
	<control type="group">
		<visible>[Container.Content(tvshows) | Container.Content(seasons)] + IntegerGreaterThan(ListItem(-7).Property(UnWatchedEpisodes),0)</visible>
		<include>UnwatchedIconCircle</include>
		<control type="label">
			<include>UnwatchedIconVars</include>
			<label>$INFO[ListItem(-7).Property(UnWatchedEpisodes)]</label>
		</control>
	</control>
</include>
</includes>